(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{439:function(t,s,n){"use strict";n.r(s);var a=n(16),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"组件渲染"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件渲染"}},[t._v("#")]),t._v(" 组件渲染")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("React")]),t._v("中主要使用的组件分为"),n("code",[t._v("ClassComponent")]),t._v("和"),n("code",[t._v("FunctionComponent")]),t._v("两种。且在"),n("code",[t._v("Hooks")]),t._v("配合"),n("code",[t._v("FunctionComponent")]),t._v("大量使用之前，"),n("code",[t._v("FunctionComponent")]),t._v("的唯一用途就是UI组件即无状态组件。那么什么是无状态组件呢？")]),t._v(" "),n("p",[t._v("无状态组件就是只负责页面的渲染，不做其他复杂逻辑操作的组件就是无状态组件。无状态组件并不是被定义为它应该是无状态的，而是"),n("code",[t._v("FunctionComponent")]),t._v("独特的渲染方式造成了这样的结果。而在这之后，"),n("code",[t._v("React")]),t._v("推出了新的编写组件的方式，就是"),n("code",[t._v("FunctionComponent")]),t._v("和"),n("code",[t._v("Hooks")]),t._v("的组合，并且这种组合践行的理念是"),n("code",[t._v("代数效应")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"代数效应"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代数效应"}},[t._v("#")]),t._v(" 代数效应")]),t._v(" "),n("p",[t._v("代数效应是什么？代数效应是函数式编程的一个概念，用于将"),n("em",[t._v("副作用")]),t._v("从函数中分离，使函数关注点保持"),n("strong",[t._v("存粹")]),t._v("。")]),t._v(" "),n("p",[t._v("那么代数效应与"),n("code",[t._v("React")]),t._v("有什么关系呢？最明显的一个例子就是Hooks。")]),t._v(" "),n("p",[t._v("在有了"),n("code",[t._v("useState")]),t._v("，"),n("code",[t._v("useReducer")]),t._v("，"),n("code",[t._v("useRef")]),t._v("这样的"),n("code",[t._v("Hooks")]),t._v("，我们就不需要关注在"),n("code",[t._v("FunctionComponent")]),t._v("中如何保存"),n("code",[t._v("state")]),t._v("，这些"),n("code",[t._v("React")]),t._v("会为我们处理。")]),t._v(" "),n("h2",{attrs:{id:"函数组件的渲染"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数组件的渲染"}},[t._v("#")]),t._v(" 函数组件的渲染")]),t._v(" "),n("p",[t._v("我们说的组件渲染就是执行组件获取"),n("code",[t._v("JSX")]),t._v("语法通过"),n("code",[t._v("React.createElement")]),t._v("返回的"),n("code",[t._v("React Element")]),t._v("。")]),t._v(" "),n("p",[t._v("那么函数组件渲染的特点就是函数的执行导致函数内定义的变量和函数都会被"),n("strong",[t._v("重新声明")]),t._v("和"),n("strong",[t._v("赋值")]),t._v("，导致无法对这些变量和函数进行有效的操作。")]),t._v(" "),n("p",[t._v("所以，为了解决这种问题就需要使用"),n("code",[t._v("Hooks")]),t._v("配合函数组件进行开发了。")]),t._v(" "),n("p",[t._v("如代码所示：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" renderWithHooks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SecondArg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Component")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SecondArg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  props"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  secondArg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SecondArg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  nextRenderLanes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" children "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Component")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" secondArg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在"),n("code",[t._v("beginWork")]),t._v("中对于"),n("code",[t._v("FunctionComponent")]),t._v("类型的组件最终会调用"),n("code",[t._v("renderWithHooks")]),t._v("方法获取函数组件的执行结果"),n("code",[t._v("React Element")]),t._v("，进而生成对应的"),n("code",[t._v("Fiber")]),t._v("节点。")]),t._v(" "),n("p",[t._v("值得注意的是，在"),n("code",[t._v("renderWithHooks")]),t._v("内部并没有其他性能优化的手段来控制组件是否执行渲染。也就是说，从函数组件自身的角度来看，只有"),n("code",[t._v("useState")]),t._v("的返回函数"),n("code",[t._v("dispatchAction")]),t._v("中在"),n("strong",[t._v("特定情况")]),t._v("下会对"),n("em",[t._v("旧新state")]),t._v("进行"),n("strong",[t._v("浅比较")]),t._v("。比较结果相等的话，就不会开启调度更新，从而避免不必要的更新。")]),t._v(" "),n("h2",{attrs:{id:"类组件的渲染"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类组件的渲染"}},[t._v("#")]),t._v(" 类组件的渲染")]),t._v(" "),n("p",[t._v("类组件渲染的方式就是调用"),n("code",[t._v("this.render")]),t._v("方法获取返回结果"),n("code",[t._v("React Element")]),t._v("，这过程也伴随着一系列的生命周期函数的执行。")]),t._v(" "),n("p",[t._v("如代码所示：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateClassInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ctor"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  newProps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" shouldUpdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkHasForceUpdateAfterProcessing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkShouldComponentUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            ctor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            oldProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            newProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            oldState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            newState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            nextContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shouldUpdate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishClassComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Component"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  shouldUpdate"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  hasContext"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("shouldUpdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("didCaptureError"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接复用上次的已经存在的Fiber节点")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bailoutOnAlreadyFinishedWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        didCaptureError "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" Component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getDerivedStateFromError "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有错误则进行组件的渲染")]),t._v("\n        nextChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新执行render方法获取React Element")]),t._v("\n        nextChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这段代码主要关注"),n("code",[t._v("updateClassInstance")]),t._v("方法中返回的"),n("code",[t._v("shouldUpdate")]),t._v("值，通过调用"),n("code",[t._v("checkHasForceUpdateAfterProcessing")]),t._v("方法或者"),n("code",[t._v("checkShouldComponentUpdate")]),t._v("会计算出是否需要进行组件的更新。")]),t._v(" "),n("p",[t._v("其中"),n("code",[t._v("checkHasForceUpdateAfterProcessing")]),t._v("方法是判断当前组件是否使用了"),n("code",[t._v("this.forceUpdate")]),t._v("方法，如果使用强制更新了则返回"),n("em",[t._v("true")]),t._v("，没有使用强制更新则返回"),n("em",[t._v("false")]),t._v("并接着调用"),n("code",[t._v("checkShouldComponentUpdate")]),t._v("方法。")]),t._v(" "),n("p",[n("code",[t._v("checkShouldComponentUpdate")]),t._v("方法就是判断当前组件是否存在"),n("code",[t._v("shouldComponentUpdate")]),t._v("这个生命周期函数，如果存在则调用这个生命周期函数，拿到"),n("code",[t._v("shouldComponentUpdate")]),t._v("的返回值作为"),n("code",[t._v("checkShouldComponentUpdate")]),t._v("方法的返回值，如果没有"),n("code",[t._v("shouldComponentUpdate")]),t._v("生命周期函数，则默认返回"),n("em",[t._v("true")]),t._v("（"),n("em",[t._v("true")]),t._v("表示需要进行组件渲染，"),n("em",[t._v("false")]),t._v("表示不需要进行组件渲染）。")]),t._v(" "),n("p",[n("code",[t._v("updateClassInstance")]),t._v("方法的返回值"),n("code",[t._v("shouldUpdate")]),t._v("会作为第四个参数传递给"),n("code",[t._v("finishClassComponent")]),t._v("方法，而"),n("code",[t._v("shouldUpdate")]),t._v("就会作为本次是否执行类组件渲染的"),n("strong",[t._v("判断条件")]),t._v("。")]),t._v(" "),n("p",[t._v("如果"),n("code",[t._v("shouldUpdate")]),t._v("为"),n("em",[t._v("false")]),t._v("且没有捕获到错误就会调用"),n("code",[t._v("bailoutOnAlreadyFinishedWork")]),t._v("方法复用上次的"),n("code",[t._v("Fiber")]),t._v("节点作为返回值。如果"),n("code",[t._v("shouldUpdate")]),t._v("为"),n("em",[t._v("true")]),t._v("，则代表本次"),n("strong",[t._v("需要更新")]),t._v("并执行组件的"),n("code",[t._v("render")]),t._v("方法完成组件渲染。")]),t._v(" "),n("h2",{attrs:{id:"函数组件性能优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数组件性能优化"}},[t._v("#")]),t._v(" 函数组件性能优化")]),t._v(" "),n("p",[t._v("通常组件层面的性能优化的目的是"),n("strong",[t._v("避免组件进行不必要的渲染")]),t._v("，达到做到性能优化的目的。")]),t._v(" "),n("p",[t._v("而函数组件自身的性能手段就比较单一，只有"),n("code",[t._v("useState")]),t._v("和"),n("code",[t._v("useReducer")]),t._v("返回的"),n("code",[t._v("dispatch")]),t._v("方法内部存在优化特性。")]),t._v(" "),n("p",[t._v("函数组件还有另外一种优化方式，使用的场景是父子组件，在父组件用"),n("code",[t._v("useMemo")]),t._v("对子组件进行"),n("strong",[t._v("缓存")]),t._v("，将子组件使用的参数作为"),n("code",[t._v("useMemo")]),t._v("的"),n("code",[t._v("deps（依赖项）")]),t._v("使用。这种使用方法就是将组件作为一个值使用，通过"),n("code",[t._v("useMemo")]),t._v("缓存起来，避免不必要的执行。且只有当组件的参数改变了，即依赖项的值改变了，"),n("code",[t._v("useMemo")]),t._v("才会重新执行回调函数即重新渲染子组件。")]),t._v(" "),n("h2",{attrs:{id:"类组件性能优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类组件性能优化"}},[t._v("#")]),t._v(" 类组件性能优化")]),t._v(" "),n("p",[t._v("相比之下，类组件的性能优化有段就比较多了，比如上文提到的使用"),n("code",[t._v("shouldComponentUpdate")]),t._v("生命周期函数，这属于从"),n("code",[t._v("组件自身控制渲染")]),t._v("。另外还有一种通过组件自身控制组件渲染的方式，就是使用"),n("code",[t._v("React.PureComponent")]),t._v("类型。作用与"),n("code",[t._v("React.Component")]),t._v("是一样的，不过"),n("code",[t._v("PureComponent")]),t._v("有一项额外的特性，那就是对于"),n("em",[t._v("旧新props")]),t._v("和"),n("em",[t._v("旧新state")]),t._v("会进行"),n("strong",[t._v("浅比较")]),t._v("，如果两组"),n("strong",[t._v("浅比较")]),t._v("都相等，就不会触发执行类组件的渲染。")]),t._v(" "),n("p",[t._v("如代码所示：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkShouldComponentUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ctor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  oldProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  newProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  oldState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  newState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  nextContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shouldComponentUpdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" shouldUpdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldComponentUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      newProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      newState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      nextContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shouldUpdate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ctor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isPureReactComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shallowEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shallowEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("\b使用"),n("code",[t._v("PureComponent")]),t._v("的组件肯定是类组件，也就按照类组件更新时调用同样的方式。在代码中可以看到"),n("code",[t._v("PureComponent")]),t._v("处理优化逻辑的函数和"),n("code",[t._v("shouldComponentUpdate")]),t._v("生命周期函数的调用是同一个函数。且"),n("code",[t._v("shouldComponentUpdate")]),t._v("生命周期函数"),n("strong",[t._v("优先级更高")]),t._v("，如果没有"),n("code",[t._v("shouldComponentUpdate")]),t._v("才会进行"),n("code",[t._v("PureComponent")]),t._v("的"),n("strong",[t._v("浅比较")]),t._v("逻辑。最后会返回一个"),n("strong",[t._v("是否需要更新的布尔值")]),t._v("决定是否调用"),n("code",[t._v("this.render")]),t._v("方法。")]),t._v(" "),n("h2",{attrs:{id:"react-memo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-memo"}},[t._v("#")]),t._v(" React.memo")]),t._v(" "),n("p",[t._v("React官网对于"),n("code",[t._v("React.memo")]),t._v("方法的描述：")]),t._v(" "),n("blockquote",[n("p",[t._v("React.memo是一个高阶组件。")])]),t._v(" "),n("blockquote",[n("p",[t._v("如果组件在相同 props 的情况下渲染相同的结果，那么你可以通过将其包装在 React.memo 中调用，以此通过记忆组件渲染结果的方式来提高组件的性能表现。")])]),t._v(" "),n("blockquote",[n("p",[t._v("默认情况下其只会对复杂对象做浅层对比,如果想要控制对比过程就传入自定义比较函数作为第二个参数。")])]),t._v(" "),n("p",[t._v("所以"),n("code",[t._v("React.memo")]),t._v("也可以作为函数组件和类组件通用的性能优化方法。那么在源码里面，对于使用"),n("code",[t._v("React.memo")]),t._v("包裹的组件又是如何处理的呢？")]),t._v(" "),n("p",[t._v("如代码所示：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" MemoComponent"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" unresolvedProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Resolve outer props first, then resolve inner props.")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" resolvedProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveDefaultProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unresolvedProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            resolvedProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveDefaultProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolvedProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateMemoComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                resolvedProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                renderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateMemoComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Component"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  nextProps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order cdoe...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("hasScheduledUpdateOrContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取旧props")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currentChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为浅比较")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" compare "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("compare"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比较函数")]),t._v("\n        compare "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" compare "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" compare "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" shallowEqual"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nextProps为新props")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果旧新props相等，并且前后ref属性相等")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用bailoutOnAlreadyFinishedWork方法复用上一次的Fiber节点")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bailoutOnAlreadyFinishedWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在"),n("code",[t._v("beginWork")]),t._v("中对于不同的"),n("code",[t._v("workInProgress.tag")]),t._v("会进行不同组件逻辑的处理。")]),t._v(" "),n("p",[t._v("像使用了"),n("code",[t._v("React.memo")]),t._v("包裹的组件对应的"),n("code",[t._v("React Element")]),t._v("属性的"),n("code",[t._v("$$typeof")]),t._v("会被赋值为"),n("code",[t._v("REACR_MEMO_ELEMENT")]),t._v("，也就是"),n("code",[t._v("workInProgres.tag")]),t._v("值为"),n("code",[t._v("MemoComponent")]),t._v("的组件就会调用"),n("code",[t._v("updateMemoComponent")]),t._v("方法创建对应的"),n("code",[t._v("Fiber节点")]),t._v("。在"),n("em",[t._v("if")]),t._v("语句中如果该组件没有被调度更新就会进入优化逻辑，判断是否有传入的"),n("code",[t._v("compare")]),t._v("函数。如果有就使用这个函数，如果没有就使用"),n("strong",[t._v("浅比较")]),t._v("方法。最后"),n("em",[t._v("旧新props")]),t._v("相等并且该组件"),n("em",[t._v("前后的ref")]),t._v("属性没有变化，将复用前一次更新的"),n("code",[t._v("Fiber节点")]),t._v("作为本次"),n("code",[t._v("beginWork")]),t._v("方法的返回值。也就意味本次更新不会重新执行组件的渲染，达到了性能优化的目的。")])])}),[],!1,null,null,null);s.default=e.exports}}]);