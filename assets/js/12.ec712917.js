(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{415:function(t,a,s){t.exports=s.p+"assets/img/workProcess.ce319392.png"},457:function(t,a,s){"use strict";s.r(a);var n=s(16),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"react工作流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react工作流程"}},[t._v("#")]),t._v(" React工作流程")]),t._v(" "),n("p",[n("code",[t._v("React")]),t._v("的工作流程就是状态更新的过程。状态更新的调用路径的关键节点：\n")]),n("div",{attrs:{align:"center"}},[n("img",{attrs:{width:"40%",src:s(415),alt:"workProcess"}})]),n("p"),t._v(" "),n("h2",{attrs:{id:"触发状态更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#触发状态更新"}},[t._v("#")]),t._v(" 触发状态更新")]),t._v(" "),n("p",[t._v("目前，React中比较常用的可以触发状态更新的方法：")]),t._v(" "),n("ul",[n("li",[t._v("ReactDOM.render")]),t._v(" "),n("li",[t._v("ReactDOM.createRoot().render()")]),t._v(" "),n("li",[t._v("this.setState")]),t._v(" "),n("li",[t._v("useState")]),t._v(" "),n("li",[t._v("useReducer")])]),t._v(" "),n("p",[t._v("这方法在每次调用的时候都会调用"),n("code",[t._v("updateContainer")]),t._v("方法创建一个"),n("code",[t._v("Update")]),t._v("对象，这个"),n("code",[t._v("Update")]),t._v("对象会保存"),n("strong",[t._v("更新状态相关的内容")]),t._v("。在"),n("code",[t._v("render")]),t._v("阶段中的"),n("code",[t._v("beginWork")]),t._v("中会根据"),n("code",[t._v("Update")]),t._v("计算新的"),n("code",[t._v("state")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"创建update对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建update对象"}},[t._v("#")]),t._v(" 创建Update对象")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateContainer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("element"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReactNodeList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  container"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" OpaqueRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  parentComponent"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("React$Component"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  callback"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("Function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" eventTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestEventTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lane "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestUpdateLane")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用createUpdate方法")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const Update = createUpdate(eventTime, lane)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" update "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    eventTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    tag"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    payload"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    callback"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    next"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Caution: React DevTools currently depends on this property")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// being called "element".')]),t._v("\n  update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("element"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  callback "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将创建的update插入到fiber.UpdateQueue属性中")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多个update通过环状链表的数据结构保存")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开启调度更新")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" root "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleUpdateOnFiber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eventTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("entangleTransitions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"从fiber到rootfiber"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从fiber到rootfiber"}},[t._v("#")]),t._v(" 从fiber到rootFiber")]),t._v(" "),n("p",[t._v("该过程会调用"),n("code",[t._v("markUpdateLaneFromFiberToRoot")]),t._v("方法向上遍历，直到遍历到"),n("code",[t._v("rootFiber")]),t._v("根节点。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("markUpdateLaneFromFiberToRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("sourceFiber"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  lane"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从目标节点，根据return属性一直向上遍历到rootFiber")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sourceFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" parent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sourceFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("return"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    parent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("return"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" HostRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"调度更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#调度更新"}},[t._v("#")]),t._v(" 调度更新")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("scheduleUpdateOnFiber")]),t._v("函数的内部会调用"),n("code",[t._v("ensureRootIsScheduled")]),t._v("方法。"),n("br"),t._v(" "),n("code",[t._v("ensureRootIsScheduled")]),t._v("的核心代码：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newCallbackPriority "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" SyncLane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过同步的优先级，同步执行render阶段")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleSyncCallback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performSyncWorkOnRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通常以normal优先级，异步执行render阶段")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" schedulerPriorityLevel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NormalSchedulerPriority"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    newCallbackNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleCallback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      schedulerPriorityLevel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performConcurrentWorkOnRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"render阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#render阶段"}},[t._v("#")]),t._v(" render阶段")]),t._v(" "),n("p",[t._v("整个render阶段又分为两个子阶段”递阶段“和”归阶段“。分别调用的方法是"),n("code",[t._v("beginWork")]),t._v("和"),n("code",[t._v("completeWork")]),t._v("。")]),t._v(" "),n("p",[t._v("render阶段会从应用的根节点"),n("code",[t._v("FiberRootNode")]),t._v("开始向下进行深度优先遍历，为每个"),n("code",[t._v("Fiber节点")]),t._v("调用"),n("code",[t._v("beginWork")]),t._v("方法，直到第一个"),n("code",[t._v("叶子节点")]),t._v("。")]),t._v(" "),n("p",[t._v('"递阶段"的工作是根据遍历到的'),n("code",[t._v("Fiber节点")]),t._v("生成它的"),n("code",[t._v("子Fiber节点")]),t._v("，并将"),n("code",[t._v("两个Fiber节点")]),t._v("连接起来，形成"),n("code",[t._v("Fiber树")]),t._v("。当遍历到"),n("code",[t._v("叶子节点")]),t._v('时，就会进入"归阶段"。')]),t._v(" "),n("p",[t._v('"归阶段"的工作是为遍历到的'),n("code",[t._v("Fiber节点")]),t._v("生成对应的真实"),n("code",[t._v("DOM节点")]),t._v("，并将"),n("code",[t._v("Fiber节点")]),t._v("和"),n("code",[t._v("DOM节点")]),t._v("产生对应关系。如果当前的"),n("code",[t._v("Fiber节点")]),t._v("存在"),n("code",[t._v("兄弟Fiber节点")]),t._v("，\n就会进入"),n("code",[t._v("兄弟Fiber节点")]),t._v("的”递阶段“。如果不存在"),n("code",[t._v("兄弟Fiber节点")]),t._v("，就会进入"),n("code",[t._v("父级Fibe节点")]),t._v("的”归阶段“，递和归交错进行，直到归到"),n("code",[t._v("FiberRootNode")]),t._v("。"),n("br"),t._v('\n在"归阶段"当中，还会调用'),n("code",[t._v("appendAllChildren")]),t._v("方法，将生成的真实"),n("code",[t._v("DOM节点")]),t._v("插入到已生成的"),n("code",[t._v("DOM节点")]),t._v("中，这样工作到根节点时，就已经形成了一棵构建好完整的"),n("code",[t._v("离屏DOM树")]),t._v("。")]),t._v(" "),n("p",[t._v("最终，在"),n("code",[t._v("performConcurrentWorkOnRoot")]),t._v("方法中会调用"),n("code",[t._v("commit阶段")]),t._v("的入口函数"),n("code",[t._v("commitRoot")])]),t._v(" "),n("h2",{attrs:{id:"commit阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#commit阶段"}},[t._v("#")]),t._v(" commit阶段")]),t._v(" "),n("p",[n("code",[t._v("commit")]),t._v("阶段的主要工作（即"),n("code",[t._v("Renderer")]),t._v("的工作流程）分为三部分：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("before mutation")]),t._v("阶段（执行DOM操作前）")]),t._v(" "),n("li",[n("code",[t._v("mutation")]),t._v("阶段（执行DOM操作）")]),t._v(" "),n("li",[n("code",[t._v("layout")]),t._v("（执行DOM操作后）\n在"),n("code",[t._v("before mutation阶段")]),t._v("之前和"),n("code",[t._v("layout阶段")]),t._v("之后还有一些额外的工作。涉及"),n("code",[t._v("useEffect的触发")]),t._v("、优先级的重置和"),n("code",[t._v("ref")]),t._v("的绑定/解绑。")])]),t._v(" "),n("p",[n("code",[t._v("before mutation")]),t._v("阶段的主要工作：")]),t._v(" "),n("ol",[n("li",[t._v("处理DOM节点渲染或删除后的"),n("code",[t._v("autofocus")]),t._v("、"),n("code",[t._v("blur")]),t._v("的逻辑")]),t._v(" "),n("li",[t._v("对于"),n("code",[t._v("ClassComponent")]),t._v("，调用"),n("code",[t._v("getSnapShotBeforeUpdate")]),t._v("生命周期函数")])]),t._v(" "),n("p",[n("code",[t._v("mutation")]),t._v("阶段的主要工作：")]),t._v(" "),n("ol",[n("li",[t._v("根据"),n("code",[t._v("ContentReset flags")]),t._v("重置文本节点")]),t._v(" "),n("li",[t._v("更新"),n("code",[t._v("ref")])]),t._v(" "),n("li",[t._v("根据"),n("code",[t._v("flags")]),t._v("分别做不同的处理，包括：执行"),n("code",[t._v("DOM")]),t._v("节点的插入，更新"),n("code",[t._v("DOM")]),t._v("节点的属性，删除"),n("code",[t._v("DOM")]),t._v("节点")])]),t._v(" "),n("p",[n("code",[t._v("layout")]),t._v("阶段的主要工作：")]),t._v(" "),n("ol",[n("li",[t._v("根据"),n("code",[t._v("fiber.tag")]),t._v("分别做不同的处理，对于"),n("code",[t._v("FunctionComponent")]),t._v("，调用"),n("code",[t._v("useLayoutEffect")]),t._v("的回调函数，对于"),n("code",[t._v("ClassComponent")]),t._v("，判断"),n("code",[t._v("current")]),t._v("是否为"),n("code",[t._v("null")]),t._v("，"),n("code",[t._v("mount")]),t._v("时调用"),n("code",[t._v("componentDidMount")]),t._v("，"),n("code",[t._v("update")]),t._v("时调用"),n("code",[t._v("componentDidUpdate")])]),t._v(" "),n("li",[t._v("执行回调函数，对于"),n("code",[t._v("ClassComponent")]),t._v("，执行"),n("code",[t._v("this.setState")]),t._v("的第二个参数回调函数，对于"),n("code",[t._v("HostRoot")]),t._v("，执行"),n("code",[t._v("ReactDOM.render")]),t._v("的第三个参数回调函数")]),t._v(" "),n("li",[t._v("赋值"),n("code",[t._v("ref")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);