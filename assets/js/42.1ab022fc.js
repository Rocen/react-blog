(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{459:function(t,e,r){"use strict";r.r(e);var s=r(16),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),r("p",[t._v("首先按照由浅入深的学习方式，需要先从理念和架构两章开始着手。")]),t._v(" "),r("p",[t._v("当有了"),r("code",[t._v("React")]),t._v("架构和完整工作流程这些宏观知识后，再通过"),r("code",[t._v("React")]),t._v("自身的特性和使用方法这些微观知识去充实"),r("code",[t._v("React")]),t._v("框架，最后可以构建比较完善和牢固的源码知识体系。")]),t._v(" "),r("h3",{attrs:{id:"理念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#理念"}},[t._v("#")]),t._v(" 理念")]),t._v(" "),r("p",[t._v("✅ "),r("RouterLink",{attrs:{to:"/docs/idea/concept.html"}},[t._v("React理念")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/idea/architecture.html"}},[t._v("React架构")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/idea/fiber.html"}},[t._v("Fiber架构的实现原理")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/idea/doubleCache.html"}},[t._v("Fiber架构的工作原理")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/idea/workProcess.html"}},[t._v("React工作流程")])],1),t._v(" "),r("h3",{attrs:{id:"架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[t._v("#")]),t._v(" 架构")]),t._v(" "),r("p",[t._v("✅ "),r("RouterLink",{attrs:{to:"/docs/architecture/scheduler.html"}},[t._v("Scheduler（调度器）")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/architecture/reconciler.html"}},[t._v("Reconciler（协调器）")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/architecture/renderer.html"}},[t._v("Renderer（渲染器）")])],1),t._v(" "),r("h3",{attrs:{id:"原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),r("p",[t._v("✅ "),r("RouterLink",{attrs:{to:"/docs/principle/diff.html"}},[t._v("diff算法")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/principle/updateState.html"}},[t._v("状态更新")])],1),t._v(" "),r("h3",{attrs:{id:"概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),r("p",[t._v("✅ "),r("RouterLink",{attrs:{to:"/docs/concept/lifeCycle.html"}},[t._v("生命周期")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/concept/eventSystem.html"}},[t._v("事件系统")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/concept/errorBoundary.html"}},[t._v("错误边界")])],1),t._v(" "),r("h3",{attrs:{id:"hooks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[t._v("#")]),t._v(" Hooks")]),t._v(" "),r("p",[t._v("✅ "),r("RouterLink",{attrs:{to:"/docs/hooks/useStateAnduseReducer.html"}},[t._v("useState和useReducer")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/hooks/useEffect.html"}},[t._v("useEffect")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/hooks/executeUseEffect.html"}},[t._v("useEffect的执行")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/hooks/useRef.html"}},[t._v("useRef")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/hooks/useMemoAnduseCallback.html"}},[t._v("useMemo和useCallback")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/hooks/useTransition.html"}},[t._v("useTransition")])],1),t._v(" "),r("h3",{attrs:{id:"concurrent-mode"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#concurrent-mode"}},[t._v("#")]),t._v(" Concurrent Mode")]),t._v(" "),r("p",[t._v("✅ "),r("RouterLink",{attrs:{to:"/docs/concurrent/scheduler.html"}},[t._v("Scheduler工作流程")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/concurrent/lane.html"}},[t._v("lane模型")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/concurrent/batchedUpdates.html"}},[t._v("批量更新")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/concurrent/suspense.html"}},[t._v("Suspense")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/concurrent/starve.html"}},[t._v("饥饿问题")])],1),t._v(" "),r("h3",{attrs:{id:"实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),r("p",[t._v("✅ "),r("RouterLink",{attrs:{to:"/docs/implement/useState.html"}},[t._v("实现简易useState")])],1),t._v(" "),r("h3",{attrs:{id:"发现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#发现"}},[t._v("#")]),t._v(" 发现")]),t._v(" "),r("p",[t._v("✅ "),r("RouterLink",{attrs:{to:"/docs/find/componentRenderAndOptimize.html"}},[t._v("组件渲染和性能优化")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/find/differentBetweenSetStateAndUseState.html"}},[t._v("setState和useState的区别")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/find/isUseStateSyncOrAsync.html"}},[t._v("useState是同步还是异步")]),r("br"),t._v("\n✅ "),r("RouterLink",{attrs:{to:"/docs/find/performanceOptimize.html"}},[t._v("useState是同步还是异步")])],1),t._v(" "),r("p",[t._v("🅿️ todo...")])])}),[],!1,null,null,null);e.default=o.exports}}]);