(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{431:function(t,s,a){"use strict";a.r(s);var n=a(16),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"scheduler-调度器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scheduler-调度器"}},[t._v("#")]),t._v(" Scheduler（调度器）")]),t._v(" "),a("p",[a("code",[t._v("Scheduler")]),t._v("是新版本"),a("code",[t._v("React")]),t._v("新增的架构，从名字就可以看出它的功能主要就是”调度“。"),a("br"),t._v("\n而"),a("code",[t._v("Scheduler")]),t._v("主要包含两个功能：")]),t._v(" "),a("ol",[a("li",[t._v("时间切片")]),t._v(" "),a("li",[t._v("优先级调度")])]),t._v(" "),a("p",[t._v("在理念这一节中介绍了，有两种场景会制约快速响应，其中之一是CPU的瓶颈会造成页面卡顿。所以为了解决CPU瓶颈造成的问题，就要使用时间切片这一特性。而实现时间切片的关键在于，浏览器是否有剩余时间作为任务中断的标准，那么我们需要一种机制，当浏览器有剩余时间时通知我们。\n虽然目前已经有了这样一个原生API："),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestIdleCallback",target:"_blank",rel:"noopener noreferrer"}},[t._v("requestIdleCallback"),a("OutboundLink")],1),t._v("。但由于以下限制，"),a("code",[t._v("React")]),t._v("并没有直接使用这个API。")]),t._v(" "),a("ul",[a("li",[t._v("浏览器兼容性")]),t._v(" "),a("li",[t._v("触发频率不稳定，比如在浏览器中切换Tab页后，之前注册的"),a("code",[t._v("requestIdleCallback")]),t._v("触发频率就会变低")])]),t._v(" "),a("p",[t._v("基于以上的原因，"),a("code",[t._v("React")]),t._v("实现了功能更完备的"),a("code",[t._v("requestIdleCallback")]),t._v("的"),a("em",[t._v("polyfill")]),t._v("实现，这就是"),a("code",[t._v("Scheduler")]),t._v("。所以"),a("code",[t._v("Scheduler")]),t._v("最大的作用就是实现"),a("strong",[t._v("时间切片")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"时间切片原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间切片原理"}},[t._v("#")]),t._v(" 时间切片原理")]),t._v(" "),a("p",[t._v("时间切片的本质就是模拟实现"),a("code",[t._v("requestIdleCallback")]),t._v("。")]),t._v(" "),a("p",[t._v("所以"),a("code",[t._v("Scheduler")]),t._v("将要使用的回调函数作为"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MessageChannel",target:"_blank",rel:"noopener noreferrer"}},[t._v("Message Channel"),a("OutboundLink")],1),t._v("的回调函数执行。如果宿主环境不支持"),a("code",[t._v("Message Channel")]),t._v("，则会降级使用"),a("code",[t._v("setTimeout")]),t._v("。在此可以看出，"),a("code",[t._v("Scheduler")]),t._v("的时间切片功能是通过"),a("strong",[t._v("宏任务")]),t._v("实现的。而原因是，在一帧当中"),a("strong",[t._v("宏任务")]),t._v("的执行时机是"),a("strong",[t._v("最靠前")]),t._v("的，JS任务尽早的执行就可以留出足够的时间去执行页面渲染流水线的工作。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("React")]),t._v("的"),a("code",[t._v("render")]),t._v("阶段，开启"),a("code",[t._v("Concurrent Mode")]),t._v("时，每次"),a("code",[t._v("while")]),t._v("遍历时，都会通过"),a("code",[t._v("Scheduler")]),t._v("提供的"),a("code",[t._v("shouldYield")]),t._v("方法判断是否需要"),a("strong",[t._v("中断遍历")]),t._v("，使浏览器有足够的时间进行渲染。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoopConcurrent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldYield")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("performUnitOfWork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("是否中断的依据就是每个任务的"),a("strong",[t._v("剩余时间")]),t._v("是否用完。")]),t._v(" "),a("p",[t._v("所以，在Scheduler中，为任务分配的初始剩余时间为"),a("code",[t._v("5ms")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldYieldToHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getCurrentTime用来获取当前时间")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// deadline表示当前的截止时间")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果当前时间大于等于截止时间，说明已经过了时间切片所预留的时间来执行任务，应该暂停任务的执行，返回true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 反之，说明还没过时间切片所预留的时间，可以执行任务，返回false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" deadline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在每次进入"),a("em",[t._v("时间切片")]),t._v("时，都会进行赋值"),a("code",[t._v("deadline = currentTime + yieldInterval")]),t._v("，而这个"),a("code",[t._v("yieldInterval")]),t._v("通常为"),a("em",[t._v("5ms")]),t._v("，所以每次任务的执行事件都会是多余"),a("em",[t._v("5ms")]),t._v("的一小段时间。")]),t._v(" "),a("h2",{attrs:{id:"优先级调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优先级调度"}},[t._v("#")]),t._v(" 优先级调度")]),t._v(" "),a("p",[a("code",[t._v("Scheduler")]),t._v("对外暴露了一个方法"),a("code",[t._v("unstable_runWithPriority")]),t._v("。这个方法接受一个优先级与一个回调函数，在回调函数内部调用获取优先级的方法都会取得第一个参数对应的优先级：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unstable_runWithPriority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("priorityLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eventHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priorityLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ImmediatePriority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" UserBlockingPriority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" NormalPriority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" LowPriority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" IdlePriority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      priorityLevel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NormalPriority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" previousPriorityLevel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currentPriorityLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  currentPriorityLevel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" priorityLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eventHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    currentPriorityLevel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" previousPriorityLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("从这段代码可以看到，"),a("code",[t._v("Scheduler")]),t._v("内部存在5种优先级。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("React")]),t._v("内部凡是涉及到优先级调度的地方，都会使用"),a("code",[t._v("unstable_runWithPriority")]),t._v("。")]),t._v(" "),a("p",[t._v("比如，"),a("code",[t._v("commit")]),t._v("阶段是同步执行的。而"),a("code",[t._v("commit")]),t._v("阶段的起点"),a("code",[t._v("commitRoot")]),t._v("方法的优先级为"),a("code",[t._v("ImmediateSchedulerPriority")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("ImmediateSchedulerPriority")]),t._v("即"),a("code",[t._v("ImmediatePriority")]),t._v("的别名，为最高优先级，所以会立刻执行。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitRoot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" renderPriorityLevel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentPriorityLevel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("runWithPriority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    ImmediateSchedulerPriority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitRootImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderPriorityLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"优先级的意义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优先级的意义"}},[t._v("#")]),t._v(" 优先级的意义")]),t._v(" "),a("p",[a("code",[t._v("Scheduler")]),t._v("对外暴露的最重要的方法是"),a("code",[t._v("unstable_scheduleCallback")]),t._v("。该方法用于以某个优先级注册回调函数。")]),t._v(" "),a("p",[t._v("比如，在"),a("code",[t._v("React")]),t._v("中，在"),a("code",[t._v("commit")]),t._v("阶段的"),a("code",[t._v("beforeMutation")]),t._v("阶段会调度"),a("code",[t._v("useEffect")]),t._v("的回调。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("rootDoesHavePassiveEffects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rootDoesHavePassiveEffects "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NormalSchedulerPriority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushPassiveEffects")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这里的回调便是通过"),a("code",[t._v("scheduleCallback")]),t._v("调度的，优先级为"),a("code",[t._v("NormalSchedulerPriority")]),t._v("，即"),a("code",[t._v("NormalPriority")]),t._v("。")]),t._v(" "),a("p",[t._v("不同的优先级意味任务过期时间：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 立刻过期")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IMMEDIATE_PRIORITY_TIMEOUT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最终过期")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("USER_BLOCKING_PRIORITY_TIMEOUT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NORMAL_PRIORITY_TIMEOUT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LOW_PRIORITY_TIMEOUT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 永不会过期")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IDLE_PRIORITY_TIMEOUT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" maxSigned31BitInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 延迟时间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priorityLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ImmediatePriority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IMMEDIATE_PRIORITY_TIMEOUT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" UserBlockingPriority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("USER_BLOCKING_PRIORITY_TIMEOUT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" IdlePriority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IDLE_PRIORITY_TIMEOUT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" LowPriority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LOW_PRIORITY_TIMEOUT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" NormalPriority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NORMAL_PRIORITY_TIMEOUT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" expirationTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" startTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始时间和延迟时间相加，等于过期时间")]),t._v("\n")])])]),a("p",[t._v("从这段代码可以看到，如果一个任务的优先级是"),a("code",[t._v("ImmediatePriority")]),t._v("，它对应的"),a("code",[t._v("timeout")]),t._v("是 "),a("strong",[t._v("-1")]),t._v("，通过它计算的过期时间就是"),a("strong",[t._v("startTime - 1")]),t._v("，说明这个任务马上就过期了，需要立即执行。"),a("br")]),t._v(" "),a("h2",{attrs:{id:"不同优先级任务的排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同优先级任务的排序"}},[t._v("#")]),t._v(" 不同优先级任务的排序")]),t._v(" "),a("p",[t._v("我们已经知道了优先级意味着任务的过期时间。所以当某一时刻，存在很多个不同优先级的任务，每个任务对应着不同的过期时间。")]),t._v(" "),a("p",[t._v("这些任务会按照过期时间分为两种：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("已经过期")]),t._v("的任务")]),t._v(" "),a("li",[a("strong",[t._v("还未过期")]),t._v("的任务")])]),t._v(" "),a("p",[t._v("所以，与之对应的，"),a("code",[t._v("Scheduler")]),t._v("也存在两个队列")]),t._v(" "),a("ul",[a("li",[t._v("timerQueue：保存还未过期任务的队列")]),t._v(" "),a("li",[t._v("taskQueue：保存已经过期任务的队列")])]),t._v(" "),a("p",[t._v("每当有新的还未过期的任务被注册，会将其插入到"),a("code",[t._v("timerQueue")]),t._v("中并根据开始时间重新排序"),a("code",[t._v("timerQueue")]),t._v("中任务的顺序。")]),t._v(" "),a("p",[t._v("而当"),a("code",[t._v("timerQueue")]),t._v("中有任务就绪时，即"),a("code",[t._v("startTime <= currentTime")]),t._v("，则将这个过期的任务取出再插入到"),a("code",[t._v("taskQueue")]),t._v("中。然后，再从"),a("code",[t._v("taskQueue")]),t._v("中取出最早过期的任务并执行它。")]),t._v(" "),a("p",[t._v("为了能在"),a("code",[t._v("O(1)")]),t._v("复杂找到两个队列中时间最早的那个任务，"),a("code",[t._v("Scheduler")]),t._v("使用"),a("em",[t._v("小顶堆")]),t._v("实现了优先级队列。")]),t._v(" "),a("p",[t._v("至此，我们通过文字叙述的方式大致了解了"),a("code",[t._v("Scheduler")]),t._v("的实现。")]),t._v(" "),a("h2",{attrs:{id:"shouldyield"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shouldyield"}},[t._v("#")]),t._v(" shouldYield")]),t._v(" "),a("p",[t._v("那么当"),a("code",[t._v("shouldYield")]),t._v("为"),a("code",[t._v("true")]),t._v("时，"),a("code",[t._v("performUnitOfWork")]),t._v("被中断后又是如何恢复的呢？")]),t._v(" "),a("p",[t._v("在执行"),a("code",[t._v("taskQueue")]),t._v("中过期任务的方法"),a("code",[t._v("workLoop")]),t._v("中有一处关键步骤：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("hasTimeRemaining"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initialTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取出callback回调函数，这个是使用scheduleCallback方法传入的第二个参数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currentTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先重置callback")]),t._v("\n      currentTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置优先级")]),t._v("\n      currentPriorityLevel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currentTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("priorityLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" didUserCallbackTimeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currentTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expirationTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" currentTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行callback，并取到执行结果")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" continuationCallback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("didUserCallbackTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      currentTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// **重点**")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断执行结果的返回值")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" continuationCallback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果返回值依然是一个函数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新赋值callback属性")]),t._v("\n        currentTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" continuationCallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果返回值不是一个函数，通常为null")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentTask "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("peek")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("taskQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 说明这个任务已经执行完毕了，将这个任务从taskQueue中移除")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("taskQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继续从timerQueue中取出过期的任务")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("advanceTimers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果callback不是一个函数，则直接从taskQueue中移除这个任务")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("taskQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当注册的回调函数执行后的返回值"),a("code",[t._v("continuationCallback")]),t._v("为"),a("code",[t._v("function")]),t._v("类型，会将"),a("code",[t._v("continuationCallback")]),t._v("再次作为当前任务的回调函数。")]),t._v(" "),a("p",[t._v("那什么时候执行完函数之后依然会返回一个函数作为结果呢？")]),t._v(" "),a("p",[a("code",[t._v("render")]),t._v("阶段被调度的函数为"),a("code",[t._v("performConcurrentWorkOnRoot")]),t._v("，在该函数末尾有这样一段代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("performConcurrentWorkOnRoot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" didTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// originalCallbackNode表示当前正在执行的task")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// root.callbackNode表示根节点正在调度的task")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbackNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" originalCallbackNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果两者相等，说明存在任务中断的情况")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为performConcurrentWorkOnRoot执行结束后，root.callbackNode会被重置为null，而originalCallbackNode一定是有值的，那么两者一定不会相等")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("performConcurrentWorkOnRoot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("可以看到，在满足一定条件时，该函数会将自己作为返回值。")]),t._v(" "),a("h2",{attrs:{id:"暂停到恢复的完整流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暂停到恢复的完整流程"}},[t._v("#")]),t._v(" 暂停到恢复的完整流程")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("Concurrent Mode")]),t._v("模式下，使用"),a("em",[t._v("时间切片")]),t._v("的特性时，如果当前正在进行中的任务已经没有剩余时间了，则会暂停当前"),a("code",[t._v("render")]),t._v("阶段的"),a("code",[t._v("performUnitOfWork")]),t._v("方法。")]),t._v(" "),a("p",[t._v("暂停的过程对应，通过"),a("code",[t._v("scheduleCallback")]),t._v("调度了"),a("code",[t._v("performConcurrentWorkOnRoot")]),t._v("方法。然后通过"),a("code",[t._v("workLoop")]),t._v("方法遍历"),a("code",[t._v("taskQueue")]),t._v("中过期的任务，而这个任务对应的回调函数就是"),a("code",[t._v("performConcurrentWorkOnRoot")]),t._v("方法，所以在这时会执行它。在执行"),a("code",[t._v("performConcurrentWorkOnRoot")]),t._v("方法时，进入到"),a("code",[t._v("workLoopConcurrent")]),t._v("方法中，在"),a("code",[t._v("while")]),t._v("循环中会调用"),a("code",[t._v("performUnitOfWork")]),t._v("方法递归遍历"),a("code",[t._v("Fiber")]),t._v("树。而当时间片用尽时，"),a("code",[t._v("shouldYield")]),t._v("方法返回"),a("code",[t._v("true")]),t._v("，将停止这个"),a("code",[t._v("while")]),t._v("循环，达到了暂停执行的目的。")]),t._v(" "),a("p",[t._v("恢复的过程对应，因为"),a("code",[t._v("performConcurrentWorkOnRoot")]),t._v("方法还没有完成"),a("code",[t._v("render")]),t._v("阶段，则根节点还存在正在执行"),a("code",[t._v("task")]),t._v("，\b\b所以"),a("code",[t._v("performConcurrentWorkOnRoot")]),t._v("方法会将自己作为返回值，并重新赋值"),a("code",[t._v("task")]),t._v("的"),a("code",[t._v("callback")]),t._v("属性。而因为"),a("code",[t._v("callback")]),t._v("的执行结果还是一个函数，所以这个"),a("code",[t._v("task")]),t._v("会继续存在于taskQueue中，它所对应的过期时间依然是最短的。等到下一轮事件循环，再次调用"),a("code",[t._v("workLoop")]),t._v("方法遍历"),a("code",[t._v("taskQueue")]),t._v("，取出未完成"),a("code",[t._v("task")]),t._v("并执行回调函数，即上次返回的"),a("code",[t._v("performConcurrentWorkOnRoot")]),t._v("方法。这个方法会接着执行未完成的"),a("code",[t._v("render")]),t._v("阶段，达到了恢复执行的目的。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[a("code",[t._v("Scheduler")]),t._v("主要包含两个功能："),a("strong",[t._v("时间切片")]),t._v("和"),a("strong",[t._v("优先级调度")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("时间切片")]),t._v("的本质是模拟实现"),a("code",[t._v("requestIdleCallback")]),t._v("，目的是防止"),a("em",[t._v("阻塞浏览器的渲染")]),t._v("，所以需要通过"),a("code",[t._v("时间切片")]),t._v("来控制任务的执行时长。当没有剩余时间时则会"),a("strong",[t._v("中断")]),t._v("任务的执行，把剩余的时间留给浏览器渲染。等到下一帧再"),a("strong",[t._v("恢复")]),t._v("任务的执行，重复此过程，直到完成"),a("code",[t._v("render")]),t._v("阶段。")]),t._v(" "),a("p",[a("strong",[t._v("优先级调度")]),t._v("，"),a("code",[t._v("Scheduler")]),t._v("对外暴露了一个"),a("code",[t._v("runWithPriority")]),t._v("方法，这个方法接受一个"),a("em",[t._v("优先级")]),t._v("与"),a("em",[t._v("回调函数")]),t._v("。优先级代表任务"),a("strong",[t._v("过期时间的长短")]),t._v("。高优先级任务的"),a("em",[t._v("过期时间短")]),t._v("，所以会先执行。低优先级任务的"),a("em",[t._v("过期时间长")]),t._v("，就会后执行。")])])}),[],!1,null,null,null);s.default=e.exports}}]);