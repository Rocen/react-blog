(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{463:function(t,a,s){"use strict";s.r(a);var e=s(16),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"状态更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态更新"}},[t._v("#")]),t._v(" 状态更新")]),t._v(" "),s("p",[s("em",[t._v("状态更新")]),t._v("通常是指状态的变化，例如当使用了"),s("code",[t._v("this.setState")]),t._v("或"),s("code",[t._v("useState")]),t._v("等方法，最后导致"),s("code",[t._v("state")]),t._v("的改变。这一过程被称为"),s("em",[t._v("状态更新")]),t._v("。")]),t._v(" "),s("p",[t._v("我们知道状态更新流程开始后首先会创建"),s("code",[t._v("Update")]),t._v("对象。这个"),s("code",[t._v("Update")]),t._v("对象就是记录该次状态更新的数据结构。")]),t._v(" "),s("h2",{attrs:{id:"update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[t._v("#")]),t._v(" Update")]),t._v(" "),s("h3",{attrs:{id:"update的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update的分类"}},[t._v("#")]),t._v(" Update的分类")]),t._v(" "),s("p",[t._v("我们先来了解"),s("code",[t._v("Update")]),t._v("的结构。")]),t._v(" "),s("p",[t._v("首先，将可以触发状态更新的方法所隶属的组件分类：")]),t._v(" "),s("ul",[s("li",[t._v("ReactDOM.render -- HostRoot")]),t._v(" "),s("li",[t._v("this.setState -- ClassComponent")]),t._v(" "),s("li",[t._v("this.foreceUpdate -- ClassComponent")]),t._v(" "),s("li",[t._v("useState -- FunctionComponent")]),t._v(" "),s("li",[t._v("useReducer -- FunctionComponent")])]),t._v(" "),s("p",[t._v("可以看到，一共有三种组件："),s("code",[t._v("HostRoot")]),t._v("、"),s("code",[t._v("ClassComponent")]),t._v("、"),s("code",[t._v("FunctionComponent")]),t._v("，可以触发状态更新。")]),t._v(" "),s("p",[t._v("由于不同类型的组件工作的方式不同，所以存在两种不同结构的"),s("code",[t._v("Update")]),t._v("。其中"),s("code",[t._v("ClassComponent")]),t._v("和"),s("code",[t._v("HostRoot")]),t._v("共用一套"),s("code",[t._v("Update")]),t._v("结构，"),s("code",[t._v("FunctionComponent")]),t._v("单独使用一种"),s("code",[t._v("Update")]),t._v("结构。")]),t._v(" "),s("p",[t._v("虽然，存在两种结构的"),s("code",[t._v("Update")]),t._v("，但是它们的工作机制与工作流程大致是相同的。本节先介绍前一种"),s("code",[t._v("Update")]),t._v("，"),s("code",[t._v("FunctionComponent")]),t._v("对应的"),s("code",[t._v("Update")]),t._v("在"),s("RouterLink",{attrs:{to:"/docs/hooks/useStateAnduseReducer.html#调用阶段"}},[t._v("这篇")]),t._v("介绍。")],1),t._v(" "),s("h3",{attrs:{id:"update的结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update的结构"}},[t._v("#")]),t._v(" Update的结构")]),t._v(" "),s("p",[s("code",[t._v("ClassComponent")]),t._v("和"),s("code",[t._v("HostRoot")]),t._v("共用同一种"),s("code",[t._v("Update")]),t._v("结构。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  eventTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任务时间,通过performance.now()获取的毫秒数,但在未来会重构掉")]),t._v("\n  lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优先级,意味着存在多个Update时，高优先级的Update会先被计算")]),t._v("\n  suspenseConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Suspense相关，暂不关注")]),t._v("\n  tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新的类型，包括UpdateState | ReplaceState | ForceUpdate | CaptureUpdate")]),t._v("\n  payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新挂载的数据。不同类型组件挂载的数据不同。")]),t._v("\n                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于ClassComponent，payload为this.setState的第一个传参。对于HostRoot，payload为ReactDOM.render的第一个传参。")]),t._v("\n  callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新的回调函数")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于ClassComponent，payload为this.setState的第二个传参。对于HostRoot，payload为ReactDOM.render的第三个传参。")]),t._v("\n  next"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向它的下一个Update，与其他Update连接形成链表")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"update与fiber的联系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update与fiber的联系"}},[t._v("#")]),t._v(" Update与Fiber的联系")]),t._v(" "),s("p",[t._v("我们知道"),s("code",[t._v("Fiber")]),t._v("节点会组成"),s("code",[t._v("Fiber")]),t._v("树，而"),s("code",[t._v("Fiber")]),t._v("节点上的多个"),s("code",[t._v("Update")]),t._v("会组成链表，并被包含在"),s("code",[t._v("fiber.updateQueue")]),t._v("中。")]),t._v(" "),s("p",[t._v("需要说明的是，每次调用触发状态更新的方法时，都会创建一个"),s("code",[t._v("Update")]),t._v("。所以当在组件中多次使用了触发状态更新的方法，当然会创建多个"),s("code",[t._v("Update")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当在一个"),s("code",[t._v("ClassComponent")]),t._v("中触发"),s("code",[t._v("onClick")]),t._v("方法，在改方法内部调用了两次"),s("code",[t._v("this.setState")]),t._v("方法，这就会在这个组件对应的"),s("code",[t._v("Fiber")]),t._v("中创建两个"),s("code",[t._v("Update")]),t._v("对象，并连接成"),s("em",[t._v("单向环状链表")]),t._v("。"),s("br"),t._v("\n因为从双缓存我们知道，"),s("code",[t._v("React")]),t._v("中最多同时存在两颗"),s("code",[t._v("Fiber")]),t._v("树：")]),t._v(" "),s("ul",[s("li",[t._v("显示在当前页面中的"),s("code",[t._v("current Fiber")]),t._v("树")]),t._v(" "),s("li",[t._v("在内存中正在构建的"),s("code",[t._v("workInProgress Fibe")]),t._v("树")])]),t._v(" "),s("p",[t._v("所以，在一个工作阶段中最多同时存在两个"),s("code",[t._v("updateQueue")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("current Fiber")]),t._v("节点保存的"),s("code",[t._v("updateQueue")]),t._v("，即"),s("code",[t._v("current updateQueue")])]),t._v(" "),s("li",[s("code",[t._v("workInProgress Fiber")]),t._v("节点保存的"),s("code",[t._v("updateQueue")]),t._v("，即"),s("code",[t._v("workInProgress updateQueue")])])]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("commit")]),t._v("阶段完成页面渲染后，"),s("code",[t._v("workInProgress Fiber")]),t._v("树会替换"),s("code",[t._v("current Fiber")]),t._v("树，而"),s("code",[t._v("workInProgress Fiber")]),t._v("树中的"),s("code",[t._v("Fiber")]),t._v("节点的"),s("code",[t._v("updateQueue")]),t._v("就会变成"),s("code",[t._v("current updateQueue")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"updatequeue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updatequeue"}},[t._v("#")]),t._v(" updateQueue")]),t._v(" "),s("p",[s("code",[t._v("ClassComponent")]),t._v("和"),s("code",[t._v("HostRoot")]),t._v("使用的"),s("code",[t._v("UpateQueue")]),t._v("结构如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    baseState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    firstBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    shared"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    effects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("字段说明：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("baseState")]),t._v("：本次更新前该"),s("code",[t._v("Fiber")]),t._v("节点的"),s("code",[t._v("state")]),t._v("，"),s("code",[t._v("Update")]),t._v("会基于该"),s("code",[t._v("state")]),t._v("计算更新后的"),s("code",[t._v("state")])]),t._v(" "),s("li",[s("code",[t._v("firstBaseUpdate")]),t._v("与"),s("code",[t._v("lastBaseUpdate")]),t._v("：本次更新前该"),s("code",[t._v("Fiber")]),t._v("节点已保存的"),s("code",[t._v("Update")]),t._v("。以链表形式存在，链表头是"),s("code",[t._v("firstBaseUpdate")]),t._v("，链表尾是"),s("code",[t._v("lastBaseUpdate")]),t._v("。之所以在更新产生前该"),s("code",[t._v("Fiber")]),t._v("节点内就存在"),s("code",[t._v("Update")]),t._v("，是由于某些"),s("em",[t._v("优先级较低")]),t._v("的"),s("code",[t._v("Update")]),t._v("在上次"),s("code",[t._v("render")]),t._v("阶段由"),s("code",[t._v("Update")]),t._v("计算"),s("code",[t._v("state")]),t._v("时被跳过了")]),t._v(" "),s("li",[s("code",[t._v("shared.pending")]),t._v("：触发更新时，产生的"),s("code",[t._v("Update")]),t._v("会保存在"),s("code",[t._v("shared.pending")]),t._v("中形成"),s("em",[t._v("单向环状链表")]),t._v("。当计算"),s("code",[t._v("Update")]),t._v("时，这个环状链表会被剪开并连接在"),s("code",[t._v("lastBaseUpdate")]),t._v("后面")]),t._v(" "),s("li",[s("code",[t._v("effects")]),t._v("：数组，用来保存"),s("code",[t._v("update.callback !== null")]),t._v("的"),s("code",[t._v("Update")])])]),t._v(" "),s("h2",{attrs:{id:"优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[t._v("#")]),t._v(" 优先级")]),t._v(" "),s("p",[t._v("通常，状态更新时由用户交互产生的，用户心里对交互顺序有个预期。"),s("code",[t._v("React")]),t._v("根据"),s("em",[t._v("人机交互研究的结果")]),t._v("中用户对交互的预期顺序为交互产生的状态更新赋予不同的"),s("em",[t._v("优先级")]),t._v("。"),s("br"),t._v("\n具体如下：")]),t._v(" "),s("ul",[s("li",[t._v("生命周期方法：同步执行")]),t._v(" "),s("li",[t._v("受控的用户输入：如在输入框中输入文字，同步执行")]),t._v(" "),s("li",[t._v("交互事件：如动画，高优先级执行")]),t._v(" "),s("li",[t._v("其他：如请求数据，低优先及执行")])]),t._v(" "),s("p",[t._v("优先级最终会反映到"),s("code",[t._v("update.lane")]),t._v("变量上，所以我们只需要根据这个变量就可以区分优先级。")]),t._v(" "),s("p",[t._v("而优先级则决定了"),s("code",[t._v("update")]),t._v("执行的顺序。当存在多"),s("code",[t._v("个update")]),t._v("时，优先级越高的"),s("code",[t._v("update")]),t._v("就会优先执行，而优先级较低的"),s("code",[t._v("update")]),t._v("就会稍后执行。")]),t._v(" "),s("p",[t._v("在创建"),s("code",[t._v("update")]),t._v("的方法"),s("code",[t._v("createUpdate")]),t._v("中会调用"),s("code",[t._v("requestUpdateLane")]),t._v("方法，这个方法的是作用决定即将创建的"),s("code",[t._v("update")]),t._v("的优先级。")]),t._v(" "),s("p",[t._v("具体看下lane的定义：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NoLane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*                          */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b0000000000000000000000000000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" SyncLane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*                        */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b0000000000000000000000000000001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" InputContinuousLane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*            */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b0000000000000000000000000000100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" DefaultLane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*                    */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b0000000000000000000000000010000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("由32位二进制位组成，"),s("code",[t._v("lane")]),t._v("的值越小对应的优先级越高，相反，"),s("code",[t._v("lane")]),t._v("的值越大对应的优先级越低。所以可以看到"),s("code",[t._v("SyncLane")]),t._v("的值最小，也就表示它的优先级最高。")]),t._v(" "),s("p",[t._v("设置"),s("code",[t._v("lane")]),t._v("优先级的具体方法：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestUpdateLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fiber"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过getCurrentUpdatePriority方法会获取当前触发状态更新的所在事件对应的lane优先级")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为通过事件系统在调用合成事件对应注册的回调函数时，会设置该合成事件对应的lane优先级")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如 此时通过click事件触发了一次状态更新，那么在收集事件监听器时会设置对应的合成事件触发事件dispatchDiscreteEvent")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 之后在执行监听器队列时，就会执行这个dispatchDiscreteEvent方法")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在dispatchDiscreteEvent方法内部就会设置全局变量currentUpdatePriority，来记录当前正在执行的事件对应的lane优先级")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 而getCurrentUpdatePriority返回的就是变量currentUpdatePriority的值")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以，click事件触发的状态更新，获取的currentUpdatePriority值是DiscreteEventPriority，对应的lane优先级是SyncLane")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注：在react事件系统中，合成事件对应的事件优先级是预设好的，可以通过搜索getEventPriority函数查看")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updateLane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentUpdatePriority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果这次状态更新是通过合成事件触发的，因为合成事件一定存在对应的事件优先级及lane优先级，所以获取到的updateLane是一定不为NoLane的（NoLane的值是0）")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" NoLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回合成事件对应的lane优先级")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" updateLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果updateLane为NoLane，即值为0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 说明此次触发状态更新的方法不属于合成事件注册的回调函数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如：setTimeout(() => setNum(1), 1000)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过setTimeout设置一个回调函数，在回调函数中触发状态更新，这个回调函数并不属于合成事件，所以currentUpdatePriority就是默认值NoLane")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以当通过getCurrentEventPriority方法获取这个回调函数的合成事件类型为undefined，那么会被赋值为DefaultEventPriority，即DefaultLane")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" eventLane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentEventPriority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" eventLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("从这段代码可以看到，在不同方法中触发的状态更新，通过"),s("code",[t._v("requestUpdateLane")]),t._v("方法获取"),s("code",[t._v("lane")]),t._v("的值是不相同的，这也就决定了即将创建的"),s("code",[t._v("update")]),t._v("的优先级。")]),t._v(" "),s("h2",{attrs:{id:"插入update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入update"}},[t._v("#")]),t._v(" 插入Update")]),t._v(" "),s("p",[s("code",[t._v("updateQueue")]),t._v("相关的代码逻辑都涉及到大量的链表操作。所以，通过具体的例子详细看下在源码中是如何操作"),s("code",[t._v("Update")]),t._v("的。")]),t._v(" "),s("p",[t._v("假设有一个"),s("code",[t._v("fiber")]),t._v("在"),s("code",[t._v("commit")]),t._v("阶段完成了渲染。该"),s("code",[t._v("fiber")]),t._v("上有两个由于优先级较低，所以在上次"),s("code",[t._v("render")]),t._v("阶段被跳过而没有处理的"),s("code",[t._v("Update")]),t._v("。他们会成为下次更新的"),s("code",[t._v("baseUpdate")]),t._v("。")]),t._v(" "),s("p",[t._v("我们称其为"),s("em",[t._v("u1")]),t._v("和"),s("em",[t._v("u2")]),t._v("，其中"),s("code",[t._v("u1.next === u2")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" u1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nu1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("如果用"),s("code",[t._v("--\x3e")]),t._v("表示链表的指向：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("当我们在这个"),s("code",[t._v("fiber")]),t._v("上又触发两次状态更新，所以先后产生了两个新的"),s("code",[t._v("Update")]),t._v("，我们称为"),s("em",[t._v("u3")]),t._v("和"),s("em",[t._v("u4")]),t._v("。"),s("br"),t._v("\n每个"),s("code",[t._v("Update")]),t._v("都会通过"),s("code",[t._v("enqueueUpdate")]),t._v("方法插入到"),s("code",[t._v("updateQueue")]),t._v("队列上。\n当插入"),s("em",[t._v("u3")]),t._v("后：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" u3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nu3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" u3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("如果当只存在一个新产生的"),s("code",[t._v("update")]),t._v("时，这个"),s("code",[t._v("update")]),t._v("会与自己形成一条"),s("em",[t._v("单项环状链表")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u3 \n                                 ◥  \\\n                                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" __ \\\n")])])]),s("p",[t._v("接着插入"),s("em",[t._v("u4")]),t._v("后：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" u4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nu4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" u3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nu3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" u4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("环状链表的最后一项要指向第一项，以此来形成环。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" u3\n                                   ▲     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n                                   └ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" ┘\n")])])]),s("p",[s("code",[t._v("shared.pending")]),t._v("会保证始终指向最后一个插入的"),s("code",[t._v("update")]),t._v("。\n更新调度完成之后会进入"),s("code",[t._v("render")]),t._v("阶段。\n此时"),s("code",[t._v("shared.pending")]),t._v("的环会被剪开并连接在"),s("code",[t._v("updateQueue.lastBaseUpdate")]),t._v("后面：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" u2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" u3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" u4\n")])])]),s("p",[t._v("接下来遍历"),s("code",[t._v("updateQueue.baseQueue")]),t._v("链表，以"),s("code",[t._v("fiber.updateQueue.baseState")]),t._v("为初始的"),s("code",[t._v("state")]),t._v("，然后依次与遍历到的每个"),s("code",[t._v("Update")]),t._v("计算并产生新的"),s("code",[t._v("state")]),t._v("。\n在遍历时如果有优先级较低的"),s("code",[t._v("Update")]),t._v("会被"),s("strong",[t._v("跳过")]),t._v("。")]),t._v(" "),s("p",[t._v("当对足够优先级的update完成遍历后得到的"),s("code",[t._v("state")]),t._v("，就是该"),s("code",[t._v("Fiber")]),t._v("节点在本次更新的"),s("code",[t._v("state")]),t._v("，被称为"),s("code",[t._v("memoizedState")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("state")]),t._v("的变化在"),s("code",[t._v("render")]),t._v("阶段产生与上次更新不同的"),s("code",[t._v("JSX")]),t._v("对象，通过"),s("code",[t._v("diff算法")]),t._v("会产生"),s("code",[t._v("flags")]),t._v("，表示该"),s("code",[t._v("Fiber")]),t._v("节点需要进行更新，最终通过"),s("code",[t._v("commit")]),t._v("阶段渲染到页面上。")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("layout")]),t._v("阶段之后，完成"),s("code",[t._v("current")]),t._v("指针的切换，"),s("code",[t._v("workInProgress Fiber")]),t._v("树就会变为"),s("code",[t._v("current Fiber")]),t._v("树，整个更新流程结束。")]),t._v(" "),s("h2",{attrs:{id:"计算update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算update"}},[t._v("#")]),t._v(" 计算Update")]),t._v(" "),s("p",[t._v("如果在一个组件中存在两种触发状态更新的方式，一个状态更新负责修改主题的颜色，一个状态更新负责修改输入框的内容。")]),t._v(" "),s("p",[t._v("其中修改主体颜色更新先触发，随后又触发了一个修改输入框内容的更新。我们将修改颜色的"),s("code",[t._v("Update")]),t._v("称为"),s("em",[t._v("u1")]),t._v("，修改输入框的"),s("code",[t._v("Update")]),t._v("称为"),s("em",[t._v("u2")]),t._v("。")]),t._v(" "),s("p",[t._v("其中"),s("em",[t._v("u1")]),t._v("先触发，就会先进入"),s("code",[t._v("render")]),t._v("阶段，但本身类似于定时器触发的更新，所以优先级比较低。此时：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("updateQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    baseState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        darkTheme"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    firstBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    shared"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u1\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    effects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在"),s("em",[t._v("u1")]),t._v("完成"),s("code",[t._v("render")]),t._v("阶段前用户通过键盘输入了字母"),s("em",[t._v("b")]),t._v("，所以就产生了"),s("em",[t._v("u2")]),t._v("。因为这种操作属于受控的用户输入，所以优先级较高，于是"),s("em",[t._v("u2")]),t._v("会中断"),s("em",[t._v("u1")]),t._v("进行的"),s("code",[t._v("render")]),t._v("阶段。此时：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("updateQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    baseState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        darkTheme"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fristBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    shared"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" u1\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    effects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("接下来将进入计算"),s("code",[t._v("update")]),t._v("的流程，首先会将"),s("code",[t._v("shared.pending")]),t._v("上的环状链表会被"),s("strong",[t._v("剪开")]),t._v("并连接到"),s("code",[t._v("baseUpdate")]),t._v("上。此时：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("updateQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    baseState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        darkTheme"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fristBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    shared"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    effects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("随后会从"),s("code",[t._v("baseUpdate")]),t._v("开始遍历和计算"),s("code",[t._v("update")]),t._v("。当遍历到"),s("em",[t._v("u1")]),t._v("时，由于其优先级不足，所以会被跳过，然后遍历到"),s("em",[t._v("u2")]),t._v("。")]),t._v(" "),s("p",[t._v("但由于"),s("code",[t._v("update")]),t._v("之间可能存在"),s("strong",[t._v("依赖关系")]),t._v("，所以被跳过的"),s("code",[t._v("update")]),t._v("及其之后"),s("strong",[t._v("所有")]),t._v("的"),s("code",[t._v("update")]),t._v("都会成为下次更新的"),s("code",[t._v("baseUpdate")]),t._v("（即u1 -- u2）。")]),t._v(" "),s("p",[t._v("当u2完成"),s("code",[t._v("render - commit")]),t._v("阶段，此时：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("updateQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    baseState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        darkTheme"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ab'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fristBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    shared"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    effects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在"),s("code",[t._v("commit")]),t._v("阶段的末尾会再调度一次更新，在该次更新中会基于"),s("code",[t._v("baseState")]),t._v("中"),s("code",[t._v("firstBaseUpdate")]),t._v("保存的"),s("em",[t._v("u1开")]),t._v("启一次新的"),s("code",[t._v("render")]),t._v("阶段。")]),t._v(" "),s("p",[t._v("在经过两次计算"),s("code",[t._v("update")]),t._v("之后得到的结果如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("updateQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    baseState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        darkTheme"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ab'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fristBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    shared"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    effects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"状态更新相关源码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态更新相关源码"}},[t._v("#")]),t._v(" 状态更新相关源码")]),t._v(" "),s("p",[t._v("以上是通过具体的例子演示创建"),s("code",[t._v("update")]),t._v("和计算"),s("code",[t._v("update")]),t._v("的过程，那么接下来从源码的角度看代码是如何操作"),s("code",[t._v("update")]),t._v("的。")]),t._v(" "),s("p",[t._v("首先，会通过"),s("code",[t._v("createUpdate")]),t._v("方法创建"),s("code",[t._v("update")]),t._v("对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("eventTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    eventTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    next"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然后通过"),s("code",[t._v("enqueueUpdate")]),t._v("方法，将创建的"),s("code",[t._v("update")]),t._v("插入到"),s("code",[t._v("updateQueue")]),t._v("中。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" enqueueUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  fiber"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  lane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取到updateQueue队列")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updateQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前Fiber被卸载时，会提前退出函数.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取到sharedQueue")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sharedQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SharedQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInterleavedUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取到pending")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pending "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sharedQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当pending为null时，说明当前update是该Fiber节点上的第一个update")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pending "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以它需要与自己连接形成环状链表，即next指针指向自己")]),t._v("\n      update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当存在多个update时，该update是最后一个update，所以需要连接在当前链表的末尾")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// shared.pending始终指向该链表最后一个update，那么shared.pending.next就是指向该链表第一个update")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为当前这个update即将成为该链表的最后一个update，所以它的指针需要指向该链表的第一个update")]),t._v("\n      update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pending"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当插入一个updat时，就需要将它连接到最后一个update后面，即pending.next = update。让这个update成为该链表最后一个update")]),t._v("\n      pending"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// shared.pending始终指向该链表最后一个update，也就是当前插入的update")]),t._v("\n    sharedQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("enqueueUpdate")]),t._v("主要是负责执行"),s("code",[t._v("update")]),t._v("的插入操作，其中就涉及到了链表的操作，单凭文字可能比较难理解，结合一个具体的例子再加深下理解。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 当前updateQueue上存在4个update，模拟环状链表的结构\nsharedQueue: 4 -> 1 -> 2 -> 3 -> 4\n\n// 此时新创建了一个update 5，就需要将这个update插入到这个环状链表里面\n\n// 首先需要将5的next指针指向第一个update\n5.next = 1; // 5 -> 1\n// 再将该环状链表的最后一个update的next指针指向这个新的update\n4.next = 5; // 4 -> 5\n// 这样就完成了update的插入操作\nsharedQueue: 1 -> 2 -> 3 -> 4 -> 5 -> 1\n// 最后再将share.pending指向该链表的最后一个update\nshared.pending: 5 -> 1 -> 2 -> 3 -> 4 -> 5\n")])])]),s("p",[t._v("我们再看一下this.setState这个方法具体这个哪些工作。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们通常使用的this.setState")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("setState")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("partialState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invariant")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" partialState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" partialState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n      partialState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setState(...): takes an object of state variables to update or a '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function which returns an object of state variables.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际调用的方法")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updater"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueSetState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partialState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setState'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际执行工作的方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueSetState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("inst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取fiber节点")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取触发事件的时间")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" eventTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestEventTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取优先级")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestUpdateLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建upadte")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eventTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 赋值payload属性，即this.setState的第一个参数")]),t._v("\n    update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当我们通过this.setState传递第二个参数时，会被赋值为callback属性")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" callback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 赋值callback")]),t._v("\n      update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将update插入到updateQueue中")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开启状态更新，即React完整的工作流程")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" root "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleUpdateOnFiber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eventTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[t._v("从这段代码可以看出，"),s("code",[t._v("this.setState")]),t._v("是一个作为顶层"),s("code",[t._v("API")]),t._v("暴露给开发者使用的，而在源码内部其实使用的是"),s("code",[t._v("enqueueSetState")]),t._v("方法。")]),t._v(" "),s("p",[t._v("这个"),s("code",[t._v("enqueueSetState")]),t._v("方法主要做了三件事：")]),t._v(" "),s("ol",[s("li",[t._v("创建"),s("code",[t._v("update")])]),t._v(" "),s("li",[t._v("将"),s("code",[t._v("update")]),t._v("插入到"),s("code",[t._v("updateQueue")]),t._v("中")]),t._v(" "),s("li",[t._v("开启一次状态更新流程")])]),t._v(" "),s("p",[t._v("对于产生的"),s("code",[t._v("update")]),t._v("，"),s("code",[t._v("react")]),t._v("是如何进行计算的？")]),t._v(" "),s("p",[t._v("计算"),s("code",[t._v("update")]),t._v("的工作是在"),s("code",[t._v("beginWork")]),t._v("方法中进行的，通过入口函数"),s("code",[t._v("updateClassComponent")]),t._v("间接调用"),s("code",[t._v("processCommitUpdate")]),t._v("完成"),s("code",[t._v("update")]),t._v("的计算工作。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" processUpdateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  workInProgress"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  props"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  instance"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取当前Fiber节点上的updateQueue")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  hasForceUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取到第一个baseUpdate")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取到最后一个baseUpdate")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取shared.pending")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pendingQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果存在需要计算的update")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pendingQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先重置shared.pending")]),t._v("\n    queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 准备剪开shared.pending上的环状链表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取到shared.pending上最后一个update")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lastPendingUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pendingQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取到shared.pending上第一个update")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" firstPendingUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 剪开环，即将lastPendingUpdate.next置null，这样最后一个update就不再指向第一个update了，由此变成了一条单向链表")]),t._v("\n    lastPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将等待计算的update连接到baseQueue上")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果最后一个baseUpdate为null，说明当前还没有baseUpdate")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 则将第一个等待计算的update作为第一个baseUpdate")]),t._v("\n      firstBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" firstPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则，说明当前存在baseUpdate，需要将等待计算的update链表连接到最后一个baseUpdate后面")]),t._v("\n      lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" firstPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将最后一个等待计算的update作为最后一个baseUpdate")]),t._v("\n    lastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取到workInProgress Fiber节点通过alternate连接的current Fiber节点")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// current不为null")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /*保证Update不丢失*/")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再获取到current上的updateQueue")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" currentQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取到current上的最后一个baseUpdate")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" currentLastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currentQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当current上最后一个baseUpdate不等于workInProgress上最后一个baseUpdate，说明存在更新")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentLastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将shared.pending这条等待计算的链表同时连接到current fiber的baseUpdate上，目的是保存这条链表")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentLastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果current fiber上最后一个baseUpdate为null")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 则说明current fiber上不存在baseUpdate，所以直接赋值current fiber的第一个baseUpdate为第一个等待计算的update")]),t._v("\n          currentQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" firstPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则，说明current fiber上存在baseUpdate，则将等待计算的update链表连接到最后一个baseUpdate后面")]),t._v("\n          currentLastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" firstPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将最后一个等待计算的update作为最后一个baseUpdate ")]),t._v("\n        currentQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始计算update")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取当前baseState")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baseState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优先级相关")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newLanes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 即将计算的baseState的值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newBaseState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 被跳过的update会通过newFirstBaseUpdate和newLastBaseUpdate变量保存")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newFirstBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newLastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取第一个baseUpdate")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" firstBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updateLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updateEventTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果当前这个update，因为优先级不足，而需要被跳过")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 则将这个update复制一份，并保存到baseUpdate上，作为下次计算update时的baseUpdate")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSubsetOfLanes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("renderLanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" updateLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 复制这个update")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" clone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          eventTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" updateEventTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          lane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" updateLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n          next"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将复制的update连接到newBaseUpdate上")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newLastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不存在newLastBaseUpdate，说明当前这个复制的update是第一个被跳过的update")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以赋值newFirstBaseUpdate和newLastBaseUpdate")]),t._v("\n          newFirstBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newLastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当下次计算这个被跳过的update时，它的baseState是基于被跳过的update对应的当前的newState计算的")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以要将newState保存到newBaseState中，作为下次计算的baseState")]),t._v("\n          newBaseState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存在newLastBaseUpdate，那就把赋值的update连接到baseUpdate链表，并作为最后一个baseUpdate")]),t._v("\n          newLastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newLastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 合并优先级")]),t._v("\n        newLanes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeLanes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newLanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" updateLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当update存在足够的优先级，就需要计算这个update")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// **保证状态依赖的连续性**")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当newLastBaseUpdate不为空，说明存在被跳过的update，那么当下次计算这个被跳过的update时是需要将这个update之后的所有的update都进行计算（尽管有些update已经被计算过了）")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以此时会收集被跳过update之后连续的所有update")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newLastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" clone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            eventTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" updateEventTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            lane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NoLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n            next"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将该update的clone项连接到baseUpdate上")]),t._v("\n          newLastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newLastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算这个update")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 大致的流程：update.payload如果是函数，则执行它，将它的结果作为partialState")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update.payload不是函数，则它作为partialState")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后this.state和partialState使用Object.assign浅合并的结果作为getStateFromUpdate方法的返回值")]),t._v("\n        newState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStateFromUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          newState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取update中callback")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" callback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当存在callback属性，说明存在自定义的回调函数")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          callback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n          update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" NoLane\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为fiber赋值Callback flags")]),t._v("\n          workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" Callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取到effects回调函数数组")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" effects "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("effects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将这个回调函数保存到updateQueue.effects数组中（最终在layout阶段对ClassComponent会调用commitUpdateQueue方法遍历effects数组依次执行这些回调函数）")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("effects "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("effects "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            effects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移动next指针指向下一个update")]),t._v("\n      update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果update为null，说明shared.pending上保存的update都已经遍历完了")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再判断shared.pending是否为null")]),t._v("\n        pendingQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pendingQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为null，说明不存在需要计算的update，表示update都被计算完了")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳出循环")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// pendingQueue不为null，说明在计算update时又触发了新的状态更新")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如: this.setState(() => {")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    this.setState({num: 2});")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    return ({num: 1})")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// })")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 外层的this.setState触发了一次状态更新，创建了一个update")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当在计算这update时，内部又触发一次状态更新，所以又会创建一个update")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 而这个update也会被插入到pendingQueue中，仍然需要计算")]),t._v("\n\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行的操作依然是把pendingQueue上保存的环状链表剪开，并连接到baseUpdate上")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lastPendingUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pendingQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" firstPendingUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 剪开环")]),t._v("\n          lastPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从第一个update开始计算")]),t._v("\n          update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" firstPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastPendingUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果newLastBaseUpdate为null，说明不存在被跳过的update")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newLastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 则新的baseState的值就是最终计算得出的state的值")]),t._v("\n      newBaseState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新baseState")]),t._v("\n    queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baseState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newBaseState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最终被跳过的update会再次赋值给baseUpdate，等到下次再计算这些update")]),t._v("\n    queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newFirstBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastBaseUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newLastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newLanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后计算出的新的state，会保存在fiber.memoizedState属性上")]),t._v("\n    workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("从这段代码可以看到，通过"),s("code",[t._v("baseState")]),t._v("和"),s("code",[t._v("pendingQueue")]),t._v("上保存的等待计算的"),s("code",[t._v("update")]),t._v("，最终计算出来的结果"),s("code",[t._v("newState")]),t._v("会被赋值给"),s("code",[t._v("fiber.memoizedState")]),t._v("。")]),t._v(" "),s("p",[t._v("那么"),s("code",[t._v("fiber.memoizedState")]),t._v("又会被如何使用呢？"),s("code",[t._v("processUpdateQueue")]),t._v("的上层函数"),s("code",[t._v("updateClassInstance")]),t._v("中：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateClassInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ctor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  newProps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算update")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("processUpdateQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fiber.memoizedState是计算出的最终的state")]),t._v("\n  newState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order code...")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将newProps赋值给实例的props")]),t._v("\n  instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将newState赋值给实例的state")]),t._v("\n  instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("从这段代码可以看到，通过计算"),s("code",[t._v("update")]),t._v("得出的"),s("code",[t._v("newState")]),t._v("最终会被赋值给实例的"),s("code",[t._v("state")]),t._v("，这样当我们在"),s("code",[t._v("ClassComponent")]),t._v("当中使用"),s("code",[t._v("this.state")]),t._v("是可以得到最新的"),s("code",[t._v("state")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"保证update不丢失"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保证update不丢失"}},[t._v("#")]),t._v(" 保证Update不丢失")]),t._v(" "),s("p",[t._v("从"),s("code",[t._v("updateQueue")]),t._v("的工作流程中可以看到，"),s("code",[t._v("render")]),t._v("阶段可能被中断，这样的话该如何保证"),s("code",[t._v("updateQueue")]),t._v("中保存的"),s("code",[t._v("update")]),t._v("不丢失的呢？")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("render")]),t._v("阶段，"),s("code",[t._v("shared.pending")]),t._v("的环会被剪开并连接在"),s("code",[t._v("updateQueue.lastBaseUpdate")]),t._v("后面。同时，也会通过"),s("code",[t._v("workInProgress.alternate")]),t._v("取到"),s("code",[t._v("current")]),t._v("，再连接到"),s("code",[t._v("current updateQueue.lastBaseUpdate")]),t._v("后面。"),s("br"),t._v("\n当"),s("code",[t._v("render")]),t._v("阶段被中断后重新开始时，会基于"),s("code",[t._v("current updateQueue")]),t._v("克隆出"),s("code",[t._v("workInProgress updateQueue")]),t._v("。由于"),s("code",[t._v("current updateQueue.lastBaseUpdate")]),t._v("已经保存了上一次的"),s("code",[t._v("update")]),t._v("，所以"),s("code",[t._v("update")]),t._v("是不会丢失的。")]),t._v(" "),s("p",[t._v("当"),s("code",[t._v("commit")]),t._v("阶段完成渲染，由于"),s("code",[t._v("workInProgress updateQueue.lastBaseUpdate")]),t._v("中保存了上一次的"),s("code",[t._v("update")]),t._v("，所以"),s("code",[t._v("workInProgress Fiber")]),t._v("树变成"),s("code",[t._v("current Fiber")]),t._v("树后也不会造成"),s("code",[t._v("Update")]),t._v("的丢失。")]),t._v(" "),s("p",[t._v("对应的的代码部分可以查看上面代码中"),s("em",[t._v("保证Update不丢失")]),t._v("的部分。")]),t._v(" "),s("h2",{attrs:{id:"保证状态依赖的连续性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保证状态依赖的连续性"}},[t._v("#")]),t._v(" 保证状态依赖的连续性")]),t._v(" "),s("p",[t._v("当某个"),s("code",[t._v("update")]),t._v("由于优先级较低而被跳过时，保存在"),s("code",[t._v("baseUpdate")]),t._v("中的不仅是该"),s("code",[t._v("update")]),t._v("，还包括链表中该"),s("code",[t._v("update")]),t._v("之后所有的"),s("code",[t._v("update")]),t._v("。")]),t._v(" "),s("p",[t._v("所谓"),s("strong",[t._v("状态依赖")]),t._v("是指当前触发的状态更新需要依靠前一个触发的状态更新的结果。比如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先触发了优先级较低的u1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后触发了优先级较高的u2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prevState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    double"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("在这个例子中，存在两次状态更新，"),s("em",[t._v("u2")]),t._v("需要获取"),s("em",[t._v("u1")]),t._v("的"),s("code",[t._v("state.num")]),t._v("值来计算此次修改的"),s("code",[t._v("double")]),t._v("的值。每当通过"),s("code",[t._v("this.setState")]),t._v("第一个参数使用函数的形式并传递"),s("code",[t._v("state")]),t._v("参数，这通常就属于"),s("code",[t._v("状态依赖")]),t._v("。这种情况中前一个状态更新结果的正确与否就决定下一个状态更新的结果是否是正确的。")]),t._v(" "),s("p",[t._v("当第一次计算"),s("code",[t._v("update")]),t._v("时，"),s("em",[t._v("u1")]),t._v("由于优先级不足被跳过了，而计算了第二个优先级较高的"),s("em",[t._v("u2")]),t._v("。虽然直接计算"),s("em",[t._v("u2")]),t._v("得出的结果一定不是正确的，但是这种情况也只会作为中间状态短暂的存在。")]),t._v(" "),s("p",[t._v("等到第二次计算"),s("code",[t._v("update")]),t._v("时，就会计算被跳过的"),s("em",[t._v("u1")]),t._v("和它之后的"),s("strong",[t._v("所有")]),s("code",[t._v("update")]),t._v("（也就是"),s("code",[t._v("u1 -- u2")]),t._v("的顺序），而得出具有正确状态依赖关系的的"),s("code",[t._v("state")]),t._v("值作为最终的计算结果。")]),t._v(" "),s("p",[t._v("对应的的代码部分可以查看上面代码中"),s("em",[t._v("保证状态依赖的连续性")]),t._v("的部分。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("状态更新的整个工作流程主要分为两部分：")]),t._v(" "),s("ol",[s("li",[t._v("通过"),s("code",[t._v("this.setState")]),t._v("触发"),s("strong",[t._v("状态更新")]),t._v("（包括创建"),s("code",[t._v("Update")]),t._v("，插入"),s("code",[t._v("Update")]),t._v("和开启调度更新）")]),t._v(" "),s("li",[t._v("在"),s("code",[t._v("beginWork")]),t._v("方法中间接调用"),s("code",[t._v("processCommitUpdate")]),t._v("计算产生的"),s("code",[t._v("update")])])]),t._v(" "),s("p",[t._v("虽然看起来可能状态更新的工作流程比较简短，但是涉及到的内容非常多，而且计算的过程也比较复杂（包括链表的操作和优先级相关），所以如果想要彻底弄懂这部分内容还是需要重复学习和理解的。")])])}),[],!1,null,null,null);a.default=n.exports}}]);